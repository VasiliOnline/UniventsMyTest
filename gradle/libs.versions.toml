[versions]
# Kotlin / AGP
kotlin = "2.0.21"
agp = "8.12.2"

# Compose
compose-bom = "2024.08.00"

# AndroidX
core-ktx = "1.13.1"
lifecycle = "2.8.6"
activity-compose = "1.9.2"

# DataStore
datastore = "1.1.1"

# KotlinX
serialization = "1.7.1"
coroutines = "1.8.1"

# Networking
retrofit = "2.11.0"
okhttp = "4.12.0"

# Maps
maps-compose = "6.8.0"
play-services-maps = "19.2.0"

# Server side
ktor = "2.3.12"
flyway = "10.16.0"
postgres = "42.7.3"
hikari = "5.1.0"
jooq = "3.19.9"

# Tests
junit = "4.13.2"
androidx-junit = "1.2.1"
espresso = "3.6.1"

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android       = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
# Compose plugin (Kotlin 2.x)
kotlin-compose       = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-jvm           = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor                 = { id = "io.ktor.plugin", version.ref = "ktor" }
flyway               = { id = "org.flywaydb.flyway", version.ref = "flyway" }
jooq-plugin          = { id = "nu.studer.jooq", version = "10.1.1" }

[libraries]
# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-material3 = { module = "androidx.compose.material3:material3" }

# AndroidX Core
core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }

# DataStore
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }

# KotlinX
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# Networking
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-kotlinx = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version = "1.0.0" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# Maps
maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "maps-compose" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "play-services-maps" }

# Server
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt-jvm", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }

postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
jbcrypt = { module = "org.mindrot:jbcrypt", version = "0.4" }

# Tests
junit = { module = "junit:junit", version.ref = "junit" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
