/*
 * This file is generated by jOOQ.
 */
package com.example.univents.jooq.tables.records


import com.example.univents.jooq.tables.Events

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class EventsRecord() : UpdatableRecordImpl<EventsRecord>(Events.EVENTS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var title: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var description: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var date: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var creatorEmail: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised EventsRecord
     */
    constructor(id: Int? = null, title: String? = null, description: String? = null, date: String? = null, creatorEmail: String? = null): this() {
        this.id = id
        this.title = title
        this.description = description
        this.date = date
        this.creatorEmail = creatorEmail
        resetChangedOnNotNull()
    }
}
